{"Structs/MMMothOpenIDConfig.html#/authorizationEndpoint":{"name":"authorizationEndpoint","parent_name":"MMMothOpenIDConfig"},"Structs/MMMothOpenIDConfig.html#/tokenEndpoint":{"name":"tokenEndpoint","parent_name":"MMMothOpenIDConfig"},"Structs/MMMothOpenIDConfig.html#/init(authorizationEndpoint:tokenEndpoint:)":{"name":"init(authorizationEndpoint:tokenEndpoint:)","parent_name":"MMMothOpenIDConfig"},"Structs/MMMothOpenIDConfig.html":{"name":"MMMothOpenIDConfig","abstract":"<p>Basic info about an OpenID provider we want to know.</p>"},"Protocols/MMMothClientStorage.html#/credentialsForClientIdentifier(_:)":{"name":"credentialsForClientIdentifier(_:)","parent_name":"MMMothClientStorage"},"Protocols/MMMothClientStorage.html#/saveCredentials(_:clientIdentifier:)":{"name":"saveCredentials(_:clientIdentifier:)","parent_name":"MMMothClientStorage"},"Protocols/MMMothClientStorage.html#/deleteCredentialsForClientIdentifier(_:)":{"name":"deleteCredentialsForClientIdentifier(_:)","parent_name":"MMMothClientStorage"},"Protocols/MMMothClientNetworking.html#/performTokenRequest(_:completion:)":{"name":"performTokenRequest(_:completion:)","abstract":"<p>Should perform/simulate the given request.</p>","parent_name":"MMMothClientNetworking"},"Protocols/MMMothClientNetworking.html#/CompletionCallback":{"name":"CompletionCallback","parent_name":"MMMothClientNetworking"},"Protocols/MMMothClientTimeSource.html#/now()":{"name":"now()","abstract":"<p>Time in seconds that the access token expires in is added to this date when figuring out","parent_name":"MMMothClientTimeSource"},"Protocols/MMMothClientTimeSource.html#/timeIntervalFromNowToDate(_:)":{"name":"timeIntervalFromNowToDate(_:)","abstract":"<p>Time in seconds from now till the given date, positive if the date is in the future.</p>","parent_name":"MMMothClientTimeSource"},"Protocols/MMMothOpenIDConfigProvider.html#/value":{"name":"value","abstract":"<p>&ldquo;Contents&rdquo; property.</p>","parent_name":"MMMothOpenIDConfigProvider"},"Protocols/AuthWebViewViewModel.html#/state":{"name":"state","parent_name":"AuthWebViewViewModel"},"Protocols/AuthWebViewViewModel.html#/didChange":{"name":"didChange","parent_name":"AuthWebViewViewModel"},"Protocols/AuthWebViewViewModel.html#/redirectURL":{"name":"redirectURL","abstract":"<p>The web view, once it got an endpoint, should be intercepting requests to URLs matching this one","parent_name":"AuthWebViewViewModel"},"Protocols/AuthWebViewViewModel.html#/looksLikeRedirectURL(url:)":{"name":"looksLikeRedirectURL(url:)","abstract":"<p><code>true</code> if the given URL looks like a redirect one. Just a helper for the view, optional for the view model.</p>","parent_name":"AuthWebViewViewModel"},"Protocols/AuthWebViewViewModel.html#/handleRedirect(request:)":{"name":"handleRedirect(request:)","abstract":"<p>Called by the web view when it detects a redirect to a URL matching <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/AuthWebViewViewModel.html#/redirectURL\">redirectURL</a></code>.</p>","parent_name":"AuthWebViewViewModel"},"Protocols/AuthWebViewViewModel.html#/handleFailureToOpenEndpoint(error:)":{"name":"handleFailureToOpenEndpoint(error:)","abstract":"<p>Called by the web view to indicate that it was unable to open the endpoint.","parent_name":"AuthWebViewViewModel"},"Protocols/AuthWebViewViewModel.html#/ignoreNavigationErrors":{"name":"ignoreNavigationErrors","abstract":"<p>If <code>true</code>, then navigation errors are reported via <code>handleFailureToOpenEndpoint</code> only for the initial","parent_name":"AuthWebViewViewModel"},"Protocols/AuthWebViewViewModel.html#/cancel()":{"name":"cancel()","abstract":"<p>Called by any party to indicate that the user wants to cancel the flow.","parent_name":"AuthWebViewViewModel"},"Protocols/AuthWebViewViewModel.html":{"name":"AuthWebViewViewModel"},"Protocols/MMMothOpenIDConfigProvider.html":{"name":"MMMothOpenIDConfigProvider","abstract":"<p>OpenID config that can be fetched/refreshed from somewhere, like a local .plist or a .json response of OpenID Discovery.</p>"},"Protocols/MMMothClientTimeSource.html":{"name":"MMMothClientTimeSource","abstract":"<p>Something providing <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/MMMothClient.html\">MMMothClient</a></code> with the current time and its scale. Handy for testing.</p>"},"Protocols/MMMothClientNetworking.html":{"name":"MMMothClientNetworking","abstract":"<p>Allows to override how <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/MMMothClient.html\">MMMothClient</a></code> makes network calls. Used mainly for testing.</p>"},"Protocols/MMMothClientStorage.html":{"name":"MMMothClientStorage","abstract":"<p>Something that can locally store credentials obtained by <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/MMMothClient.html\">MMMothClient</a></code>."},"Enums/AuthWebViewViewModelState.html#/preparing":{"name":"preparing","abstract":"<p>The authorization endpoint is not known yet, e.g. an OAuth configuration is being fetched","parent_name":"AuthWebViewViewModelState"},"Enums/AuthWebViewViewModelState.html#/gotEndpoint(_:)":{"name":"gotEndpoint(_:)","abstract":"<p>The endpoint is known now.</p>","parent_name":"AuthWebViewViewModelState"},"Enums/AuthWebViewViewModelState.html#/finalizing":{"name":"finalizing","abstract":"<p>The request to a redirect URL contains a successful response and the flow is being finalized","parent_name":"AuthWebViewViewModelState"},"Enums/AuthWebViewViewModelState.html#/failed":{"name":"failed","abstract":"<p>The flow has failed at one of the steps.</p>","parent_name":"AuthWebViewViewModelState"},"Enums/AuthWebViewViewModelState.html#/completedSuccessfully":{"name":"completedSuccessfully","abstract":"<p>The flow has been completed successfully.</p>","parent_name":"AuthWebViewViewModelState"},"Enums/AuthWebViewViewModelState.html#/cancelled":{"name":"cancelled","abstract":"<p>The authentication has been cancelled by the user.</p>","parent_name":"AuthWebViewViewModelState"},"Enums/AuthWebViewViewModelState.html":{"name":"AuthWebViewViewModelState"},"Classes/MMMothIDToken.html#/value":{"name":"value","abstract":"<p>The raw value of the token.</p>","parent_name":"MMMothIDToken"},"Classes/MMMothIDToken.html#/issuer":{"name":"issuer","abstract":"<p>&ldquo;Issuer Identifier for the Issuer of the response. The iss value is a case sensitive URL using the https","parent_name":"MMMothIDToken"},"Classes/MMMothIDToken.html#/subject":{"name":"subject","abstract":"<p>&ldquo;Subject Identifier. A locally unique and never reassigned identifier within the Issuer for the End-User,","parent_name":"MMMothIDToken"},"Classes/MMMothIDToken.html#/audience":{"name":"audience","abstract":"<p>&ldquo;Audience(s) that this ID Token is intended for. It MUST contain the OAuth 2.0 client_id of the Relying Party","parent_name":"MMMothIDToken"},"Classes/MMMothIDToken.html#/expiresAt":{"name":"expiresAt","abstract":"<p>&ldquo;Expiration time on or after which the ID Token MUST NOT be accepted for processing.&rdquo;</p>","parent_name":"MMMothIDToken"},"Classes/MMMothIDToken.html#/issuedAt":{"name":"issuedAt","abstract":"<p>&ldquo;Time at which the JWT was issued.&rdquo;</p>","parent_name":"MMMothIDToken"},"Classes/MMMothIDToken.html#/nonce":{"name":"nonce","abstract":"<p>&ldquo;String value used to associate a Client session with an ID Token, and to mitigate replay attacks.","parent_name":"MMMothIDToken"},"Classes/MMMothIDToken.html#/name":{"name":"name","abstract":"<p>&ldquo;End-User&rsquo;s full name in displayable form including all name parts, possibly including titles and suffixes,","parent_name":"MMMothIDToken"},"Classes/MMMothIDToken.html#/picture":{"name":"picture","abstract":"<p>&ldquo;URL of the End-User&rsquo;s profile picture. This URL MUST refer to an image file (for example, a PNG, JPEG,","parent_name":"MMMothIDToken"},"Classes/MMMothIDToken.html#/email":{"name":"email","abstract":"<p>&ldquo;End-User&rsquo;s preferred e-mail address. Its value MUST conform to the RFC 5322 [RFC5322] addr-spec syntax.","parent_name":"MMMothIDToken"},"Classes/MMMothIDToken.html#/givenName":{"name":"givenName","abstract":"<p>&ldquo;Given name(s) or first name(s) of the End-User. Note that in some cultures, people can have multiple","parent_name":"MMMothIDToken"},"Classes/MMMothIDToken.html#/familyName":{"name":"familyName","abstract":"<p>&ldquo;Surname(s) or last name(s) of the End-User. Note that in some cultures, people can have multiple","parent_name":"MMMothIDToken"},"Classes/MMMothIDToken.html#/payload":{"name":"payload","abstract":"<p>A raw payload dictionary in case the client needs to read something we have not covered.</p>","parent_name":"MMMothIDToken"},"Classes/MMMothIDToken.html#/header":{"name":"header","abstract":"<p>A raw header dictionary, for diagnostics.</p>","parent_name":"MMMothIDToken"},"Classes/MMMothIDToken.html#/init(string:)":{"name":"init(string:)","parent_name":"MMMothIDToken"},"Classes/MMMothIDToken.html#/init(from:)":{"name":"init(from:)","parent_name":"MMMothIDToken"},"Classes/MMMothIDToken.html#/encode(to:)":{"name":"encode(to:)","parent_name":"MMMothIDToken"},"Classes/MMMothIDToken.html#/description":{"name":"description","parent_name":"MMMothIDToken"},"Classes/MMMothIDToken.html#/==(_:_:)":{"name":"==(_:_:)","parent_name":"MMMothIDToken"},"Classes/MMMothOpenIDDiscoveryConfigProvider.html#/issuerURL":{"name":"issuerURL","parent_name":"MMMothOpenIDDiscoveryConfigProvider"},"Classes/MMMothOpenIDDiscoveryConfigProvider.html#/init(issuerURL:)":{"name":"init(issuerURL:)","parent_name":"MMMothOpenIDDiscoveryConfigProvider"},"Classes/MMMothOpenIDDiscoveryConfigProvider.html#/doSync()":{"name":"doSync()","parent_name":"MMMothOpenIDDiscoveryConfigProvider"},"Classes/MMMothOpenIDDiscoveryConfigProvider.html#/isContentsAvailable":{"name":"isContentsAvailable","parent_name":"MMMothOpenIDDiscoveryConfigProvider"},"Classes/MMMothOpenIDDiscoveryConfigProvider.html#/value":{"name":"value","parent_name":"MMMothOpenIDDiscoveryConfigProvider"},"Classes/MMMothStaticOpenIDConfigProvider.html#/init(value:)":{"name":"init(value:)","parent_name":"MMMothStaticOpenIDConfigProvider"},"Classes/MMMothStaticOpenIDConfigProvider.html#/doSync()":{"name":"doSync()","parent_name":"MMMothStaticOpenIDConfigProvider"},"Classes/MMMothStaticOpenIDConfigProvider.html#/isContentsAvailable":{"name":"isContentsAvailable","parent_name":"MMMothStaticOpenIDConfigProvider"},"Classes/MMMothStaticOpenIDConfigProvider.html#/value":{"name":"value","parent_name":"MMMothStaticOpenIDConfigProvider"},"Classes/MMMothClient/UserDefaultsStorage.html#/init(key:)":{"name":"init(key:)","parent_name":"UserDefaultsStorage"},"Classes/MMMothClient/UserDefaultsStorage.html#/credentialsForClientIdentifier(_:)":{"name":"credentialsForClientIdentifier(_:)","parent_name":"UserDefaultsStorage"},"Classes/MMMothClient/UserDefaultsStorage.html#/saveCredentials(_:clientIdentifier:)":{"name":"saveCredentials(_:clientIdentifier:)","parent_name":"UserDefaultsStorage"},"Classes/MMMothClient/UserDefaultsStorage.html#/deleteCredentialsForClientIdentifier(_:)":{"name":"deleteCredentialsForClientIdentifier(_:)","parent_name":"UserDefaultsStorage"},"Classes/MMMothClient/ResponseType.html#/code":{"name":"code","abstract":"<p>&ldquo;Authorization Code&rdquo; flow, see <a href=\"\">https://tools.ietf.org/html/rfc6749#section-4.1</a></p>","parent_name":"ResponseType"},"Classes/MMMothClient/ResponseType.html#/token":{"name":"token","abstract":"<p>&ldquo;Implicit&rdquo; flow, see <a href=\"\">https://tools.ietf.org/html/rfc6749#section-4.2</a>.</p>","parent_name":"ResponseType"},"Classes/MMMothClient/ResponseType.html#/idToken":{"name":"idToken","abstract":"<p>OpenID extension. This is similar to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/MMMothClient/ResponseType.html#/token\">.token</a></code> but an ID Token is returned as well.","parent_name":"ResponseType"},"Classes/MMMothClient/OpenIDSettings/Prompt.html#/none":{"name":"none","abstract":"<p>No authentication or consent pages should be displayed.","parent_name":"Prompt"},"Classes/MMMothClient/OpenIDSettings/Prompt.html#/login":{"name":"login","abstract":"<p>The server should prompt for authentication even if the user is authenticated already.</p>","parent_name":"Prompt"},"Classes/MMMothClient/OpenIDSettings/Prompt.html#/consent":{"name":"consent","abstract":"<p>The server should ask for consent.</p>","parent_name":"Prompt"},"Classes/MMMothClient/OpenIDSettings/Prompt.html#/selectAccount":{"name":"selectAccount","abstract":"<p>The server should ask the end-user to select their account.</p>","parent_name":"Prompt"},"Classes/MMMothClient/OpenIDSettings/Display.html#/page":{"name":"page","abstract":"<p>Full page view. Assumed to be default by the server when no settings are provided.</p>","parent_name":"Display"},"Classes/MMMothClient/OpenIDSettings/Display.html#/popup":{"name":"popup","abstract":"<p>A popup window.</p>","parent_name":"Display"},"Classes/MMMothClient/OpenIDSettings/Display.html#/touch":{"name":"touch","abstract":"<p>&ldquo;UI consistent with a device that leverages a touch interface&rdquo;.</p>","parent_name":"Display"},"Classes/MMMothClient/OpenIDSettings.html#/display":{"name":"display","abstract":"<p>How authorization page should be presented.</p>","parent_name":"OpenIDSettings"},"Classes/MMMothClient/OpenIDSettings/Display.html":{"name":"Display","parent_name":"OpenIDSettings"},"Classes/MMMothClient/OpenIDSettings.html#/prompt":{"name":"prompt","abstract":"<p>&ldquo;&hellip;specifies whether the Authorization Server prompts the End-User for reauthentication and consent.&rdquo;","parent_name":"OpenIDSettings"},"Classes/MMMothClient/OpenIDSettings/Prompt.html":{"name":"Prompt","parent_name":"OpenIDSettings"},"Classes/MMMothClient/OpenIDSettings.html#/uiLocales":{"name":"uiLocales","abstract":"<p>&ldquo;End-User&rsquo;s preferred languages and scripts for the user interface [&hellip;] ordered by preference.&rdquo;</p>","parent_name":"OpenIDSettings"},"Classes/MMMothClient/OpenIDSettings.html#/other":{"name":"other","abstract":"<p>Allows to pass any non-standard settings or settings not supported by this struct.</p>","parent_name":"OpenIDSettings"},"Classes/MMMothClient/OpenIDSettings.html#/init()":{"name":"init()","parent_name":"OpenIDSettings"},"Classes/MMMothClient/DefaultTimeSource.html#/init(scale:)":{"name":"init(scale:)","parent_name":"DefaultTimeSource"},"Classes/MMMothClient/DefaultTimeSource.html#/now()":{"name":"now()","parent_name":"DefaultTimeSource"},"Classes/MMMothClient/DefaultTimeSource.html#/timeIntervalFromNowToDate(_:)":{"name":"timeIntervalFromNowToDate(_:)","parent_name":"DefaultTimeSource"},"Classes/MMMothClient/Config.html#/authorizationEndpoint":{"name":"authorizationEndpoint","abstract":"<p>An endpoint that will be opened in a browser (in-app or external) so the end-user can authenticate themselves","parent_name":"Config"},"Classes/MMMothClient/Config.html#/tokenEndpoint":{"name":"tokenEndpoint","abstract":"<p>An endpoint where a &ldquo;grant&rdquo; (a refresh token or an authorization code in our case) can be exchanged","parent_name":"Config"},"Classes/MMMothClient/Config.html#/clientIdentifier":{"name":"clientIdentifier","abstract":"<p>A string identifying the client.</p>","parent_name":"Config"},"Classes/MMMothClient/Config.html#/clientSecret":{"name":"clientSecret","abstract":"<p>The secret part of the client&rsquo;s identifier.</p>","parent_name":"Config"},"Classes/MMMothClient/Config.html#/redirectURL":{"name":"redirectURL","abstract":"<p>The URL the authorization server is going to redirect its response regarding authorization.</p>","parent_name":"Config"},"Classes/MMMothClient/Config.html#/init(authorizationEndpoint:tokenEndpoint:clientIdentifier:clientSecret:redirectURL:)":{"name":"init(authorizationEndpoint:tokenEndpoint:clientIdentifier:clientSecret:redirectURL:)","parent_name":"Config"},"Classes/MMMothClient/DefaultNetworking.html#/init()":{"name":"init()","parent_name":"DefaultNetworking"},"Classes/MMMothClient/DefaultNetworking.html#/performTokenRequest(_:completion:)":{"name":"performTokenRequest(_:completion:)","parent_name":"DefaultNetworking"},"Classes/MMMothClient/Credentials.html#/accessToken":{"name":"accessToken","parent_name":"Credentials"},"Classes/MMMothClient/Credentials.html#/expiresAt":{"name":"expiresAt","parent_name":"Credentials"},"Classes/MMMothClient/Credentials.html#/refreshToken":{"name":"refreshToken","parent_name":"Credentials"},"Classes/MMMothClient/Credentials.html#/idToken":{"name":"idToken","parent_name":"Credentials"},"Classes/MMMothClient/Credentials.html#/init(scope:responseType:accessToken:expiresAt:refreshToken:idToken:)":{"name":"init(scope:responseType:accessToken:expiresAt:refreshToken:idToken:)","parent_name":"Credentials"},"Classes/MMMothClient/Credentials.html#/description":{"name":"description","parent_name":"Credentials"},"Classes/MMMothClient/Credentials.html#/debugDescription":{"name":"debugDescription","parent_name":"Credentials"},"Classes/MMMothClient/Mode.html#/silent":{"name":"silent","abstract":"<p>No attempt to request user authorization interactively (via a browser) is made in this mode.","parent_name":"Mode"},"Classes/MMMothClient/Mode.html#/interactive":{"name":"interactive","abstract":"<p>When in this mode it is expected that the user code monitors the state of the client and helps","parent_name":"Mode"},"Classes/MMMothClient/State.html#/idle":{"name":"idle","abstract":"<p>Not doing anything yet, did not even check for previous credentials.","parent_name":"State"},"Classes/MMMothClient/State.html#/authorizing(url:redirectURL:)":{"name":"authorizing(url:redirectURL:)","abstract":"<p>The flow has been started and no valid access or refresh tokens were found in the storage.","parent_name":"State"},"Classes/MMMothClient/State.html#/fetchingToken":{"name":"fetchingToken","abstract":"<p>The client is exchanging the authorization code received from the server for an access token.</p>","parent_name":"State"},"Classes/MMMothClient/State.html#/failed(_:)":{"name":"failed(_:)","abstract":"<p>The flow has failed at some point, no credentials are available.","parent_name":"State"},"Classes/MMMothClient/State.html#/cancelled":{"name":"cancelled","abstract":"<p>The flow has been explicitly cancelled by the user.","parent_name":"State"},"Classes/MMMothClient/State.html#/authorized(_:refreshing:)":{"name":"authorized(_:refreshing:)","abstract":"<p>The client got authorization to access the requested scopes.","parent_name":"State"},"Classes/MMMothClient.html#/init(storage:networking:timeSource:)":{"name":"init(storage:networking:timeSource:)","abstract":"<p>Initializes without attempting to obtain authorization or check for previously stored credentials.</p>","parent_name":"MMMothClient"},"Classes/MMMothClient/State.html":{"name":"State","parent_name":"MMMothClient"},"Classes/MMMothClient.html#/state":{"name":"state","parent_name":"MMMothClient"},"Classes/MMMothClient.html#/didChange":{"name":"didChange","abstract":"<p>Triggers when <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/MMMothClient.html#/state\">state</a></code> changes.</p>","parent_name":"MMMothClient"},"Classes/MMMothClient/Mode.html":{"name":"Mode","abstract":"<p>The mode to start the flow in.</p>","parent_name":"MMMothClient"},"Classes/MMMothClient.html#/startOpenIDFlow(config:mode:openIDSettings:)":{"name":"startOpenIDFlow(config:mode:openIDSettings:)","abstract":"<p>A shortcut for <code>start()</code> beginning &ldquo;authorization code&rdquo; OpenID flow.</p>","parent_name":"MMMothClient"},"Classes/MMMothClient.html#/startImplicitOpenIDFlow(config:mode:openIDSettings:)":{"name":"startImplicitOpenIDFlow(config:mode:openIDSettings:)","abstract":"<p>A shortcut for <code>start()</code> beginning &ldquo;implicit&rdquo; OpenID flow.</p>","parent_name":"MMMothClient"},"Classes/MMMothClient.html#/start(config:mode:responseType:scope:openIDSettings:)":{"name":"start(config:mode:responseType:scope:openIDSettings:)","abstract":"<p>Called by the user code to start the flow.</p>","parent_name":"MMMothClient"},"Classes/MMMothClient.html#/cancel()":{"name":"cancel()","abstract":"<p>Turns the client into <code>.cancelled</code> state unless it is in <code>.authorized</code> already. Safe to call multiple times.","parent_name":"MMMothClient"},"Classes/MMMothClient.html#/end()":{"name":"end()","abstract":"<p>Forgets the credentials, if was authorized, cancels the flow otherwise.</p>","parent_name":"MMMothClient"},"Classes/MMMothClient.html#/handleAuthorizationRedirect(url:)":{"name":"handleAuthorizationRedirect(url:)","abstract":"<p>Called by the user code when the browser got redirected to <code>redirectURL</code>.</p>","parent_name":"MMMothClient"},"Classes/MMMothClient.html#/handleAuthorizationFailure(error:)":{"name":"handleAuthorizationFailure(error:)","abstract":"<p>Called by the user code when the browser cannot open the authorization endpoint.</p>","parent_name":"MMMothClient"},"Classes/MMMothClient.html#/nudgeToRefresh()":{"name":"nudgeToRefresh()","abstract":"<p>Nudges the client to begin refreshing tokens now in case it is waiting between transient token refresh errors.","parent_name":"MMMothClient"},"Classes/MMMothClient/Credentials.html":{"name":"Credentials","abstract":"<p>Access and/or ID tokens along with the scopes and response types they were obtained for.</p>","parent_name":"MMMothClient"},"Classes/MMMothClient/DefaultNetworking.html":{"name":"DefaultNetworking","abstract":"<p>Default implementation of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/MMMothClientNetworking.html\">MMMothClientNetworking</a></code> used by <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/MMMothClient.html\">MMMothClient</a></code>.</p>","parent_name":"MMMothClient"},"Classes/MMMothClient/Config.html":{"name":"Config","parent_name":"MMMothClient"},"Classes/MMMothClient/DefaultTimeSource.html":{"name":"DefaultTimeSource","abstract":"<p>Default implementation of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/MMMothClientTimeSource.html\">MMMothClientTimeSource</a></code> that can also be used to scale expiration time intervals","parent_name":"MMMothClient"},"Classes/MMMothClient/OpenIDSettings.html":{"name":"OpenIDSettings","abstract":"<p>Optional OpenID-specific parameters for the authorization endpoint.","parent_name":"MMMothClient"},"Classes/MMMothClient/ResponseType.html":{"name":"ResponseType","abstract":"<p>What kind of thing we would like to get via a redirect URL when the authorization is successful,","parent_name":"MMMothClient"},"Classes/MMMothClient/UserDefaultsStorage.html":{"name":"UserDefaultsStorage","abstract":"<p>NSUserDefaults-backed credentials store for <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/MMMothClient.html\">MMMothClient</a></code>.</p>","parent_name":"MMMothClient"},"Classes/AuthWebViewController/Style.html#/backgroundColor":{"name":"backgroundColor","parent_name":"Style"},"Classes/AuthWebViewController/Style.html#/completedStateMessage":{"name":"completedStateMessage","parent_name":"Style"},"Classes/AuthWebViewController/Style.html#/failedStateMessage":{"name":"failedStateMessage","parent_name":"Style"},"Classes/AuthWebViewController/Style.html#/init(backgroundColor:completedStateMessage:failedStateMessage:)":{"name":"init(backgroundColor:completedStateMessage:failedStateMessage:)","parent_name":"Style"},"Classes/AuthWebViewController/Style.html":{"name":"Style","parent_name":"AuthWebViewController"},"Classes/AuthWebViewController.html#/init(viewModel:style:webView:)":{"name":"init(viewModel:style:webView:)","parent_name":"AuthWebViewController"},"Classes/AuthWebViewController.html#/loadView()":{"name":"loadView()","parent_name":"AuthWebViewController"},"Classes/AuthWebViewController.html#/viewDidLoad()":{"name":"viewDidLoad()","parent_name":"AuthWebViewController"},"Classes/AuthWebViewController.html#/webView(_:decidePolicyFor:decisionHandler:)":{"name":"webView(_:decidePolicyFor:decisionHandler:)","parent_name":"AuthWebViewController"},"Classes/AuthWebViewController.html#/webView(_:didStartProvisionalNavigation:)":{"name":"webView(_:didStartProvisionalNavigation:)","parent_name":"AuthWebViewController"},"Classes/AuthWebViewController.html#/webView(_:didFailProvisionalNavigation:withError:)":{"name":"webView(_:didFailProvisionalNavigation:withError:)","parent_name":"AuthWebViewController"},"Classes/AuthWebViewController.html#/webView(_:didFinish:)":{"name":"webView(_:didFinish:)","parent_name":"AuthWebViewController"},"Classes/AuthWebViewController.html#/webView(_:didFail:withError:)":{"name":"webView(_:didFail:withError:)","parent_name":"AuthWebViewController"},"Classes/AuthWebViewController.html#/webViewWebContentProcessDidTerminate(_:)":{"name":"webViewWebContentProcessDidTerminate(_:)","parent_name":"AuthWebViewController"},"Classes/DefaultAuthWebViewViewModel.html#/init(client:ignoreNavigationErrors:)":{"name":"init(client:ignoreNavigationErrors:)","parent_name":"DefaultAuthWebViewViewModel"},"Classes/DefaultAuthWebViewViewModel.html#/state":{"name":"state","parent_name":"DefaultAuthWebViewViewModel"},"Classes/DefaultAuthWebViewViewModel.html#/didChange":{"name":"didChange","parent_name":"DefaultAuthWebViewViewModel"},"Classes/DefaultAuthWebViewViewModel.html#/redirectURL":{"name":"redirectURL","parent_name":"DefaultAuthWebViewViewModel"},"Classes/DefaultAuthWebViewViewModel.html#/handleRedirect(request:)":{"name":"handleRedirect(request:)","parent_name":"DefaultAuthWebViewViewModel"},"Classes/DefaultAuthWebViewViewModel.html#/handleFailureToOpenEndpoint(error:)":{"name":"handleFailureToOpenEndpoint(error:)","parent_name":"DefaultAuthWebViewViewModel"},"Classes/DefaultAuthWebViewViewModel.html#/ignoreNavigationErrors":{"name":"ignoreNavigationErrors","parent_name":"DefaultAuthWebViewViewModel"},"Classes/DefaultAuthWebViewViewModel.html#/cancel()":{"name":"cancel()","parent_name":"DefaultAuthWebViewViewModel"},"Classes/MockAuthWebViewViewModel.html#/init()":{"name":"init()","parent_name":"MockAuthWebViewViewModel"},"Classes/MockAuthWebViewViewModel.html#/state":{"name":"state","parent_name":"MockAuthWebViewViewModel"},"Classes/MockAuthWebViewViewModel.html#/didChange":{"name":"didChange","parent_name":"MockAuthWebViewViewModel"},"Classes/MockAuthWebViewViewModel.html#/redirectURL":{"name":"redirectURL","parent_name":"MockAuthWebViewViewModel"},"Classes/MockAuthWebViewViewModel.html#/handleRedirect(request:)":{"name":"handleRedirect(request:)","parent_name":"MockAuthWebViewViewModel"},"Classes/MockAuthWebViewViewModel.html#/handleFailureToOpenEndpoint(error:)":{"name":"handleFailureToOpenEndpoint(error:)","parent_name":"MockAuthWebViewViewModel"},"Classes/MockAuthWebViewViewModel.html#/cancel()":{"name":"cancel()","parent_name":"MockAuthWebViewViewModel"},"Classes/MockAuthWebViewViewModel.html#/ignoreNavigationErrors":{"name":"ignoreNavigationErrors","parent_name":"MockAuthWebViewViewModel"},"Classes/MockAuthWebViewViewModel.html":{"name":"MockAuthWebViewViewModel","abstract":"<p>To test AuthWebViewController without any actual provider.</p>"},"Classes/DefaultAuthWebViewViewModel.html":{"name":"DefaultAuthWebViewViewModel"},"Classes/AuthWebViewController.html":{"name":"AuthWebViewController","abstract":"<p>A basic in-app browser to use with OAuth/OpenID flows."},"Classes/MMMothClient.html":{"name":"MMMothClient","abstract":"<p>Basic <a href=\"https://tools.ietf.org/html/rfc6749\">OAuth 2.0</a> client supporting"},"Classes/MMMothStaticOpenIDConfigProvider.html":{"name":"MMMothStaticOpenIDConfigProvider","abstract":"<p>OpenID config that&rsquo;s immediately available.</p>"},"Classes/MMMothOpenIDDiscoveryConfigProvider.html":{"name":"MMMothOpenIDDiscoveryConfigProvider","abstract":"<p>OpenID config that can be fetched from a provider according to OpenID Connect Discovery conventions."},"Classes/MMMothIDToken.html":{"name":"MMMothIDToken","abstract":"<p>Simple parser for <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDToken\">ID Tokens</a>,"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"}}